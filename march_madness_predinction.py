# -*- coding: utf-8 -*-
"""March Madness Predinction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NLYcVsEdqQcrtDmFwxp0fbo3PJlEj2rN
"""

from google.colab import drive
drive.mount('/content/drive')

"""# New Section"""

# Commented out IPython magic to ensure Python compatibility.
# %cd '/content/drive/MyDrive/Intelligent Systems/4 Supervised Learning (Decision Trees)/Decision Tree Hand In'

!pwd
!ls

# Import Dataset
import pandas as pd
from sklearn.tree import DecisionTreeClassifier

#the file has no names for columns.
columns = ['team','conf','g','w','adjoe','adjde','barthag','efg_o','efg_d','tor','tord','orb','drb','ftr','ftrd','2p_o','2p_d','3p_o','3p_d','adjt','wab','mm']


mm = pd.read_csv('cbb21.csv',names = columns)
#we check the names of the columns on the on name file. 
mm.head()

y = mm['mm']
mm_mod = mm
mm_mod.drop(mm_mod.columns[[0,1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]] , axis = 1 , inplace = True)
X = mm_mod

#hyper parameter max depth
tree_clf = DecisionTreeClassifier(max_depth = 10)
tree_clf.fit(X.values,y)

go = True
while go:

  g = int(input('\nHow many games did they played? '))
  if 32 >= g >= 20:
    w = int(input('\nHow many games did they win? '))
    if g >= w:
      adjoe = float(input('\nWhat is the average of points scored by the team per game? '))
      adjde = float(input('\nWhat is the average of points allowed by the teamper game? '))
      if adjoe or adjde < 0:
        barthag = float(input('\nWhat are the chances of beating a D1 team? (0 - 1) '))
        if 1 >= barthag >= 0:
          go = False
        else:
          print('\nSorry, that was an invalid command') 
      else:
        print('\nSorry, that was an invalid command')
    else:
      print('\nSorry, that was an invalid command') 
  else:
    print('\nSorry, that was an invalid command')



#Prediction
pred =  tree_clf.predict([[g, w, adjoe,adjoe,barthag]])

if pred == 1:
  print('\nCongratulations, you are going to March Madness!')
elif pred == 0:
  print('\nBetter luck next year :(')

from sklearn import tree
import graphviz

# dot is a graph description language
dot = tree.export_graphviz(tree_clf,
                           out_file=None, 
                           filled=True,
                           rounded=True,
                           special_characters=True,
                           fontname='helvetica') 

# we create a graph from dot source using graphviz.Source
graph = graphviz.Source(dot) 
graph